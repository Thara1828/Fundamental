{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOjj4yltU50ePD813f5NG7F"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":[],"metadata":{"id":"d57p3FsuS2-F"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"lU7c9cnNOxHZ","executionInfo":{"status":"ok","timestamp":1727957545009,"user_tz":-330,"elapsed":870,"user":{"displayName":"Tharini Krishnan","userId":"01323948079685009338"}},"outputId":"45bf6fb7-ed95-4a27-afd4-db03650754f4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0  Clothing ID  Age                    Title  \\\n","0           0          767   33                      NaN   \n","1           1         1080   34                      NaN   \n","2           2         1077   60  Some major design flaws   \n","3           3         1049   50         My favorite buy!   \n","4           4          847   47         Flattering shirt   \n","\n","                                         Review Text  Rating  Recommended IND  \\\n","0  Absolutely wonderful - silky and sexy and comf...       4                1   \n","1  Love this dress!  it's sooo pretty.  i happene...       5                1   \n","2  I had such high hopes for this dress and reall...       3                0   \n","3  I love, love, love this jumpsuit. it's fun, fl...       5                1   \n","4  This shirt is very flattering to all due to th...       5                1   \n","\n","   Positive Feedback Count   Division Name Department Name Class Name  \n","0                        0       Initmates        Intimate  Intimates  \n","1                        4         General         Dresses    Dresses  \n","2                        0         General         Dresses    Dresses  \n","3                        0  General Petite         Bottoms      Pants  \n","4                        6         General            Tops    Blouses  "],"text/html":["\n","  <div id=\"df-99b3d99b-596e-4ed2-b120-932b8639f622\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Clothing ID</th>\n","      <th>Age</th>\n","      <th>Title</th>\n","      <th>Review Text</th>\n","      <th>Rating</th>\n","      <th>Recommended IND</th>\n","      <th>Positive Feedback Count</th>\n","      <th>Division Name</th>\n","      <th>Department Name</th>\n","      <th>Class Name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>767</td>\n","      <td>33</td>\n","      <td>NaN</td>\n","      <td>Absolutely wonderful - silky and sexy and comf...</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Initmates</td>\n","      <td>Intimate</td>\n","      <td>Intimates</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1080</td>\n","      <td>34</td>\n","      <td>NaN</td>\n","      <td>Love this dress!  it's sooo pretty.  i happene...</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>General</td>\n","      <td>Dresses</td>\n","      <td>Dresses</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1077</td>\n","      <td>60</td>\n","      <td>Some major design flaws</td>\n","      <td>I had such high hopes for this dress and reall...</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>General</td>\n","      <td>Dresses</td>\n","      <td>Dresses</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1049</td>\n","      <td>50</td>\n","      <td>My favorite buy!</td>\n","      <td>I love, love, love this jumpsuit. it's fun, fl...</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>General Petite</td>\n","      <td>Bottoms</td>\n","      <td>Pants</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>847</td>\n","      <td>47</td>\n","      <td>Flattering shirt</td>\n","      <td>This shirt is very flattering to all due to th...</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>General</td>\n","      <td>Tops</td>\n","      <td>Blouses</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99b3d99b-596e-4ed2-b120-932b8639f622')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-99b3d99b-596e-4ed2-b120-932b8639f622 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-99b3d99b-596e-4ed2-b120-932b8639f622');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5f8c2443-88ea-4541-b6e5-dadc77fbe90e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5f8c2443-88ea-4541-b6e5-dadc77fbe90e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5f8c2443-88ea-4541-b6e5-dadc77fbe90e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"d","summary":"{\n  \"name\": \"d\",\n  \"rows\": 23486,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6779,\n        \"min\": 0,\n        \"max\": 23485,\n        \"num_unique_values\": 23486,\n        \"samples\": [\n          1297,\n          7228,\n          21410\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clothing ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 203,\n        \"min\": 0,\n        \"max\": 1205,\n        \"num_unique_values\": 1206,\n        \"samples\": [\n          835,\n          753,\n          93\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 18,\n        \"max\": 99,\n        \"num_unique_values\": 77,\n        \"samples\": [\n          47,\n          62,\n          41\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 13993,\n        \"samples\": [\n          \"Colorful, pretty shirt\",\n          \"Unique soft and comfy fall top\",\n          \"Great fitting jean.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Review Text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 22634,\n        \"samples\": [\n          \"This top is really pretty and nice quality. runs big - i went down a size, and its perfect. coloring is more subtle in person than in the photo.\",\n          \"I was so excited to splurge on a mara hoffman suit and was sorely disappointed when i received this suit in the mail. i'm petite and fairly curvy, so i knew it would likely be a little long in the torso but the whole suit was so oddly shaped, i couldn't imagine anyone it would fit. the square shape in between the halter pieces is awkward, and the pieces that are supposed to hold your chest are super wide and loose.\",\n          \"Got so many complements! really comfy but runs big! i'm usually a large and i wish i had gotten the small.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recommended IND\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Positive Feedback Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 0,\n        \"max\": 122,\n        \"num_unique_values\": 82,\n        \"samples\": [\n          21,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Division Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Initmates\",\n          \"General\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Intimate\",\n          \"Dresses\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Intimates\",\n          \"Layering\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}],"source":["#Importing libraries\n","import pandas as pd\n","\n","d = pd.read_csv('/content/WC.csv', sep=',')\n","d.head()"]},{"cell_type":"code","source":["d.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D05nZZ26Q9jN","executionInfo":{"status":"ok","timestamp":1727957589375,"user_tz":-330,"elapsed":9,"user":{"displayName":"Tharini Krishnan","userId":"01323948079685009338"}},"outputId":"76fe8c2f-f566-4e2a-944c-a4c5398427e2"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 23486 entries, 0 to 23485\n","Data columns (total 11 columns):\n"," #   Column                   Non-Null Count  Dtype \n","---  ------                   --------------  ----- \n"," 0   Unnamed: 0               23486 non-null  int64 \n"," 1   Clothing ID              23486 non-null  int64 \n"," 2   Age                      23486 non-null  int64 \n"," 3   Title                    19676 non-null  object\n"," 4   Review Text              22641 non-null  object\n"," 5   Rating                   23486 non-null  int64 \n"," 6   Recommended IND          23486 non-null  int64 \n"," 7   Positive Feedback Count  23486 non-null  int64 \n"," 8   Division Name            23472 non-null  object\n"," 9   Department Name          23472 non-null  object\n"," 10  Class Name               23472 non-null  object\n","dtypes: int64(6), object(5)\n","memory usage: 2.0+ MB\n"]}]},{"cell_type":"code","source":["d.describe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":186},"id":"2jj-eo_QTFqy","executionInfo":{"status":"ok","timestamp":1727957601759,"user_tz":-330,"elapsed":14,"user":{"displayName":"Tharini Krishnan","userId":"01323948079685009338"}},"outputId":"10700558-2397-40b4-e38c-beb1d3286765"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method NDFrame.describe of        Unnamed: 0  Clothing ID  Age  \\\n","0               0          767   33   \n","1               1         1080   34   \n","2               2         1077   60   \n","3               3         1049   50   \n","4               4          847   47   \n","...           ...          ...  ...   \n","23481       23481         1104   34   \n","23482       23482          862   48   \n","23483       23483         1104   31   \n","23484       23484         1084   28   \n","23485       23485         1104   52   \n","\n","                                                   Title  \\\n","0                                                    NaN   \n","1                                                    NaN   \n","2                                Some major design flaws   \n","3                                       My favorite buy!   \n","4                                       Flattering shirt   \n","...                                                  ...   \n","23481                     Great dress for many occasions   \n","23482                         Wish it was made of cotton   \n","23483                              Cute, but see through   \n","23484  Very cute dress, perfect for summer parties an...   \n","23485                    Please make more like this one!   \n","\n","                                             Review Text  Rating  \\\n","0      Absolutely wonderful - silky and sexy and comf...       4   \n","1      Love this dress!  it's sooo pretty.  i happene...       5   \n","2      I had such high hopes for this dress and reall...       3   \n","3      I love, love, love this jumpsuit. it's fun, fl...       5   \n","4      This shirt is very flattering to all due to th...       5   \n","...                                                  ...     ...   \n","23481  I was very happy to snag this dress at such a ...       5   \n","23482  It reminds me of maternity clothes. soft, stre...       3   \n","23483  This fit well, but the top was very see throug...       3   \n","23484  I bought this dress for a wedding i have this ...       3   \n","23485  This dress in a lovely platinum is feminine an...       5   \n","\n","       Recommended IND  Positive Feedback Count   Division Name  \\\n","0                    1                        0       Initmates   \n","1                    1                        4         General   \n","2                    0                        0         General   \n","3                    1                        0  General Petite   \n","4                    1                        6         General   \n","...                ...                      ...             ...   \n","23481                1                        0  General Petite   \n","23482                1                        0  General Petite   \n","23483                0                        1  General Petite   \n","23484                1                        2         General   \n","23485                1                       22  General Petite   \n","\n","      Department Name Class Name  \n","0            Intimate  Intimates  \n","1             Dresses    Dresses  \n","2             Dresses    Dresses  \n","3             Bottoms      Pants  \n","4                Tops    Blouses  \n","...               ...        ...  \n","23481         Dresses    Dresses  \n","23482            Tops      Knits  \n","23483         Dresses    Dresses  \n","23484         Dresses    Dresses  \n","23485         Dresses    Dresses  \n","\n","[23486 rows x 11 columns]>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.generic.NDFrame.describe</b><br/>def describe(percentiles=None, include=None, exclude=None) -&gt; Self</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py</a>Generate descriptive statistics.\n","\n","Descriptive statistics include those that summarize the central\n","tendency, dispersion and shape of a\n","dataset&#x27;s distribution, excluding ``NaN`` values.\n","\n","Analyzes both numeric and object series, as well\n","as ``DataFrame`` column sets of mixed data types. The output\n","will vary depending on what is provided. Refer to the notes\n","below for more detail.\n","\n","Parameters\n","----------\n","percentiles : list-like of numbers, optional\n","    The percentiles to include in the output. All should\n","    fall between 0 and 1. The default is\n","    ``[.25, .5, .75]``, which returns the 25th, 50th, and\n","    75th percentiles.\n","include : &#x27;all&#x27;, list-like of dtypes or None (default), optional\n","    A white list of data types to include in the result. Ignored\n","    for ``Series``. Here are the options:\n","\n","    - &#x27;all&#x27; : All columns of the input will be included in the output.\n","    - A list-like of dtypes : Limits the results to the\n","      provided data types.\n","      To limit the result to numeric types submit\n","      ``numpy.number``. To limit it instead to object columns submit\n","      the ``numpy.object`` data type. Strings\n","      can also be used in the style of\n","      ``select_dtypes`` (e.g. ``df.describe(include=[&#x27;O&#x27;])``). To\n","      select pandas categorical columns, use ``&#x27;category&#x27;``\n","    - None (default) : The result will include all numeric columns.\n","exclude : list-like of dtypes or None (default), optional,\n","    A black list of data types to omit from the result. Ignored\n","    for ``Series``. Here are the options:\n","\n","    - A list-like of dtypes : Excludes the provided data types\n","      from the result. To exclude numeric types submit\n","      ``numpy.number``. To exclude object columns submit the data\n","      type ``numpy.object``. Strings can also be used in the style of\n","      ``select_dtypes`` (e.g. ``df.describe(exclude=[&#x27;O&#x27;])``). To\n","      exclude pandas categorical columns, use ``&#x27;category&#x27;``\n","    - None (default) : The result will exclude nothing.\n","\n","Returns\n","-------\n","Series or DataFrame\n","    Summary statistics of the Series or Dataframe provided.\n","\n","See Also\n","--------\n","DataFrame.count: Count number of non-NA/null observations.\n","DataFrame.max: Maximum of the values in the object.\n","DataFrame.min: Minimum of the values in the object.\n","DataFrame.mean: Mean of the values.\n","DataFrame.std: Standard deviation of the observations.\n","DataFrame.select_dtypes: Subset of a DataFrame including/excluding\n","    columns based on their dtype.\n","\n","Notes\n","-----\n","For numeric data, the result&#x27;s index will include ``count``,\n","``mean``, ``std``, ``min``, ``max`` as well as lower, ``50`` and\n","upper percentiles. By default the lower percentile is ``25`` and the\n","upper percentile is ``75``. The ``50`` percentile is the\n","same as the median.\n","\n","For object data (e.g. strings or timestamps), the result&#x27;s index\n","will include ``count``, ``unique``, ``top``, and ``freq``. The ``top``\n","is the most common value. The ``freq`` is the most common value&#x27;s\n","frequency. Timestamps also include the ``first`` and ``last`` items.\n","\n","If multiple object values have the highest count, then the\n","``count`` and ``top`` results will be arbitrarily chosen from\n","among those with the highest count.\n","\n","For mixed data types provided via a ``DataFrame``, the default is to\n","return only an analysis of numeric columns. If the dataframe consists\n","only of object and categorical data without any numeric columns, the\n","default is to return an analysis of both the object and categorical\n","columns. If ``include=&#x27;all&#x27;`` is provided as an option, the result\n","will include a union of attributes of each type.\n","\n","The `include` and `exclude` parameters can be used to limit\n","which columns in a ``DataFrame`` are analyzed for the output.\n","The parameters are ignored when analyzing a ``Series``.\n","\n","Examples\n","--------\n","Describing a numeric ``Series``.\n","\n","&gt;&gt;&gt; s = pd.Series([1, 2, 3])\n","&gt;&gt;&gt; s.describe()\n","count    3.0\n","mean     2.0\n","std      1.0\n","min      1.0\n","25%      1.5\n","50%      2.0\n","75%      2.5\n","max      3.0\n","dtype: float64\n","\n","Describing a categorical ``Series``.\n","\n","&gt;&gt;&gt; s = pd.Series([&#x27;a&#x27;, &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;])\n","&gt;&gt;&gt; s.describe()\n","count     4\n","unique    3\n","top       a\n","freq      2\n","dtype: object\n","\n","Describing a timestamp ``Series``.\n","\n","&gt;&gt;&gt; s = pd.Series([\n","...     np.datetime64(&quot;2000-01-01&quot;),\n","...     np.datetime64(&quot;2010-01-01&quot;),\n","...     np.datetime64(&quot;2010-01-01&quot;)\n","... ])\n","&gt;&gt;&gt; s.describe()\n","count                      3\n","mean     2006-09-01 08:00:00\n","min      2000-01-01 00:00:00\n","25%      2004-12-31 12:00:00\n","50%      2010-01-01 00:00:00\n","75%      2010-01-01 00:00:00\n","max      2010-01-01 00:00:00\n","dtype: object\n","\n","Describing a ``DataFrame``. By default only numeric fields\n","are returned.\n","\n","&gt;&gt;&gt; df = pd.DataFrame({&#x27;categorical&#x27;: pd.Categorical([&#x27;d&#x27;, &#x27;e&#x27;, &#x27;f&#x27;]),\n","...                    &#x27;numeric&#x27;: [1, 2, 3],\n","...                    &#x27;object&#x27;: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]\n","...                    })\n","&gt;&gt;&gt; df.describe()\n","       numeric\n","count      3.0\n","mean       2.0\n","std        1.0\n","min        1.0\n","25%        1.5\n","50%        2.0\n","75%        2.5\n","max        3.0\n","\n","Describing all columns of a ``DataFrame`` regardless of data type.\n","\n","&gt;&gt;&gt; df.describe(include=&#x27;all&#x27;)  # doctest: +SKIP\n","       categorical  numeric object\n","count            3      3.0      3\n","unique           3      NaN      3\n","top              f      NaN      a\n","freq             1      NaN      1\n","mean           NaN      2.0    NaN\n","std            NaN      1.0    NaN\n","min            NaN      1.0    NaN\n","25%            NaN      1.5    NaN\n","50%            NaN      2.0    NaN\n","75%            NaN      2.5    NaN\n","max            NaN      3.0    NaN\n","\n","Describing a column from a ``DataFrame`` by accessing it as\n","an attribute.\n","\n","&gt;&gt;&gt; df.numeric.describe()\n","count    3.0\n","mean     2.0\n","std      1.0\n","min      1.0\n","25%      1.5\n","50%      2.0\n","75%      2.5\n","max      3.0\n","Name: numeric, dtype: float64\n","\n","Including only numeric columns in a ``DataFrame`` description.\n","\n","&gt;&gt;&gt; df.describe(include=[np.number])\n","       numeric\n","count      3.0\n","mean       2.0\n","std        1.0\n","min        1.0\n","25%        1.5\n","50%        2.0\n","75%        2.5\n","max        3.0\n","\n","Including only string columns in a ``DataFrame`` description.\n","\n","&gt;&gt;&gt; df.describe(include=[object])  # doctest: +SKIP\n","       object\n","count       3\n","unique      3\n","top         a\n","freq        1\n","\n","Including only categorical columns from a ``DataFrame`` description.\n","\n","&gt;&gt;&gt; df.describe(include=[&#x27;category&#x27;])\n","       categorical\n","count            3\n","unique           3\n","top              d\n","freq             1\n","\n","Excluding numeric columns from a ``DataFrame`` description.\n","\n","&gt;&gt;&gt; df.describe(exclude=[np.number])  # doctest: +SKIP\n","       categorical object\n","count            3      3\n","unique           3      3\n","top              f      a\n","freq             1      1\n","\n","Excluding object columns from a ``DataFrame`` description.\n","\n","&gt;&gt;&gt; df.describe(exclude=[object])  # doctest: +SKIP\n","       categorical  numeric\n","count            3      3.0\n","unique           3      NaN\n","top              f      NaN\n","freq             1      NaN\n","mean           NaN      2.0\n","std            NaN      1.0\n","min            NaN      1.0\n","25%            NaN      1.5\n","50%            NaN      2.0\n","75%            NaN      2.5\n","max            NaN      3.0</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 11734);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["d.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"id":"uMfnrzqTTIn4","executionInfo":{"status":"ok","timestamp":1727957640868,"user_tz":-330,"elapsed":529,"user":{"displayName":"Tharini Krishnan","userId":"01323948079685009338"}},"outputId":"6b5885df-be07-4e1c-8420-e8072824ebc1"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0                    0\n","Clothing ID                   0\n","Age                           0\n","Title                      3810\n","Review Text                 845\n","Rating                        0\n","Recommended IND               0\n","Positive Feedback Count       0\n","Division Name                14\n","Department Name              14\n","Class Name                   14\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Unnamed: 0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Clothing ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Title</th>\n","      <td>3810</td>\n","    </tr>\n","    <tr>\n","      <th>Review Text</th>\n","      <td>845</td>\n","    </tr>\n","    <tr>\n","      <th>Rating</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Recommended IND</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Positive Feedback Count</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Division Name</th>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>Department Name</th>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>Class Name</th>\n","      <td>14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#Feature scaling\n","from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","# Select only numerical columns for scaling\n","numerical_cols = d.select_dtypes(include=['number']).columns\n","X_scaled = scaler.fit_transform(d[numerical_cols])"],"metadata":{"id":"2WtbN2MiTSID","executionInfo":{"status":"ok","timestamp":1727957772239,"user_tz":-330,"elapsed":615,"user":{"displayName":"Tharini Krishnan","userId":"01323948079685009338"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","# Check for typos and correct the column name if necessary\n","X = d.drop('Unnamed: 0', axis=1)  # Replace 'quality' with the actual column name\n","y = d['Clothing ID'] # 'Clothings' has been replaced with the actual column name 'Clothing ID'\n","\n","X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)"],"metadata":{"id":"oRFmFC6qTZ_o","executionInfo":{"status":"ok","timestamp":1727957945932,"user_tz":-330,"elapsed":637,"user":{"displayName":"Tharini Krishnan","userId":"01323948079685009338"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["# Importing necessary libraries\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import confusion_matrix, accuracy_score, ConfusionMatrixDisplay\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","\n","df = pd.read_csv(\"/content/WC.csv\")\n","\n","df_clean = df.dropna(subset=['Review Text', 'Rating', 'Recommended IND'])\n","\n","# Features: 'Review Text', 'Rating', 'Age'\n","X_text = df_clean['Review Text']\n","X_numerical = df_clean[['Rating', 'Age']]\n","y = df_clean['Recommended IND']\n","\n","# Text vectorization using TF-IDF\n","tfidf = TfidfVectorizer(max_features=1000, stop_words='english')\n","X_text_tfidf = tfidf.fit_transform(X_text).toarray()\n","\n","# Scaling the numerical features\n","scaler = StandardScaler()\n","X_numerical_scaled = scaler.fit_transform(X_numerical)\n","\n","# Combine text and numerical features\n","X_combined = np.hstack((X_text_tfidf, X_numerical_scaled))\n","\n","# Split the data into train and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X_combined, y, test_size=0.2, random_state=42)\n","\n","# Train a Logistic Regression model\n","model = LogisticRegression()\n","model.fit(X_train, y_train)\n","\n","# Make predictions\n","y_pred = model.predict(X_test)\n","\n","# Evaluate the model\n","accuracy = accuracy_score(y_test, y_pred)\n","cm = confusion_matrix(y_test, y_pred)\n","\n","# Display accuracy and confusion matrix\n","print(f\"Accuracy: {accuracy:.2f}\")\n","ConfusionMatrixDisplay(cm).plot()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"6EbM_ASpU6z_","executionInfo":{"status":"ok","timestamp":1727958384100,"user_tz":-330,"elapsed":5057,"user":{"displayName":"Tharini Krishnan","userId":"01323948079685009338"}},"outputId":"1dfa478a-9dc1-4d26-dcd4-947283bc577e"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.94\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Import necessary libraries\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# Load the dataset\n","df = pd.read_csv(\"/content/WC.csv\")\n","\n","# Drop rows with missing values\n","df_clean = df.dropna(subset=['Review Text', 'Rating', 'Recommended IND'])\n","\n","# Set up seaborn theme\n","sns.set(style=\"whitegrid\")\n","\n","# 1. Visualizing the distribution of ratings\n","plt.figure(figsize=(8, 5))\n","sns.countplot(data=df_clean, x='Rating', palette='viridis')\n","plt.title('Distribution of Product Ratings')\n","plt.xlabel('Rating')\n","plt.ylabel('Count')\n","plt.show()\n","\n","# 2. Visualizing the relationship between age and recommendation\n","plt.figure(figsize=(8, 5))\n","sns.histplot(data=df_clean, x='Age', hue='Recommended IND', multiple='stack', palette='coolwarm', bins=20)\n","plt.title('Age Distribution by Recommendation')\n","plt.xlabel('Age')\n","plt.ylabel('Count')\n","plt.show()\n","\n","# 3. Visualizing Positive Feedback Count\n","plt.figure(figsize=(8, 5))\n","sns.histplot(data=df_clean, x='Positive Feedback Count', hue='Recommended IND', multiple='stack', palette='crest', bins=20)\n","plt.title('Positive Feedback Count by Recommendation')\n","plt.xlabel('Positive Feedback Count')\n","plt.ylabel('Count')\n","plt.show()\n","\n","# 4. Visualizing the relationship between Ratings and Recommendation\n","plt.figure(figsize=(8, 5))\n","sns.boxplot(data=df_clean, x='Recommended IND', y='Rating', palette='Set3')\n","plt.title('Boxplot of Ratings by Recommendation')\n","plt.xlabel('Recommended (0 = No, 1 = Yes)')\n","plt.ylabel('Rating')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"OKY-JHbwWAKr","executionInfo":{"status":"ok","timestamp":1727958480634,"user_tz":-330,"elapsed":3709,"user":{"displayName":"Tharini Krishnan","userId":"01323948079685009338"}},"outputId":"89dc62a5-026e-40f5-c76c-f6a276b6d869"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-26-1f9432b25ab5>:16: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.countplot(data=df_clean, x='Rating', palette='viridis')\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"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+21tm6yh1+sREREhTa143OOB254eHV0ePXq0TdswnMRYt27dkmyaWQzLREREZBdubm6YPHkyhg0bho0bN2L06NHSKK27uzvCw8Ph4eFhMWjWqVPH4pUdDGrXro3z589Dr9cbhcvU1FQApqOzzmLYb7lcjtatW1ssp9PprN6mYd/S09ONRr/v3buHjIwMo7J16tSBRqN5Yt1AYX8eO3YMDx8+NBq1TUtLs7pd1hg3bhx27Nhh05UxHj58iH379qFWrVrSNwj2xO9iiYiIyG7Cw8MRGhqKzz77DLm5uahatSpatGiBzZs3486dOyblH700WqdOnfDHH3+YvVKEYXQ1KioKd+7cQWJiovRcQUEBNmzYAE9PTzRv3twOe1V0hv3etGmT2bm6j18SzhqtW7eGXC7HF198YTTabO4qIF27dkVycjJ++uknk+cyMzNRUFAAoLA/CwoK8NVXX0nP63Q6fPHFF0Vu35PUqVMHPXv2xKZNm8weB5ZotVq88cYbePDgAcaOHeuQS5pyZJmIiIjsauTIkXjttdewdetWDBo0CLNnz8agQYMwYMAAPP/886hbty7++usv/Prrr7h58yZ27Nghrbd792689tpreO6559CoUSNkZGTgwIEDmDNnDho0aIABAwZg06ZNiIuLw3//+1/Url0bu3fvxqlTpzB9+nSjK2E42+zZszF48GD06NED/fv3h6+vr9n9tpa3tzdGjBiB1atXY8yYMXj22Wdx9uxZHD58GFWqVDEqO3LkSBw4cABjx45Fnz590KhRI+Tk5ODChQvYvXs39u/fD29vb0RHR6NZs2b44IMPcP36ddSvXx979uwpkessP27s2LHYvn070tLSzF7R4tatW9i+fTv0ej0yMzNx+fJl7NmzB3fu3MGIESMwcODAEm+TOQzLREREZFedOnVCnTp1sG7dOvTv3x/169fHN998g+XLl+O7775DRkYGvL29ERwcjPHjx0vrVahQARs3bsTy5cuxd+9ebNu2DVWrVkWrVq2kO8B5eHhgw4YNWLRoEbZt24bs7Gz4+/tj/vz56Nu3r7N22az69etjy5YtWLFiBbZt24YHDx6Y3e+iiI2NhUKhwNdff43jx48jNDQU69atw5gxY4zKqVQqbNiwAatXr8auXbvw3XffoWLFivDz88OECROkExVlMhlWrVqFefPmYceOHRAEAdHR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XR8REZVN7s5uABGVA27uEAQBZ6/pocmzf3WeCiDYh2MBRERUfAzLROQwmjwgW+vsVhAREVmPQy9ERERERBYwLBMRERERWcCwTERERERkAcMyEREREZEFDMtERERERBYwLBMRERERWcCwTERERERkAcMyEREREZEFDMtERERERBYwLBMRERERWcCwTERERERkAcMyEREREZEFDMtERERERBYwLBMRERERWcCwTERERERkAcMyEREREZEFDMtERERERBYwLBMRERERWcCwTERERERkAcMyEREREZEFDMtERERERBYwLBMRERERWcCwTERERERkAcMyEREREZEFDMtERERERBYwLBMRERERWcCwTERERERkgbuzG0DkqjwVZaseIiIiKjqGZaLHCIIAURQR7OO4L15EUQR0BQ6rj4iIiKzDsEz0GFEUIQgCCq6eh5irsXt9QsUqcK/pB+Tn2r0uIiIiKhqGZSILxIw7EDWZDqrNz0H1EBERUVHwBD8iIiIiIgtcKiz/8MMPGDduHKKiotC0aVP06tUL3377beF8zkd888036Ny5M0JCQtCzZ08cPHjQZFtZWVmYPn06WrRogbCwMEycOBG3b982KXfq1CkMGDAAoaGhaNeuHdasWWNSHxERERGVTy4Vlj/99FOoVCrExcVh1apViIqKwsyZM7Fy5UqpzM6dOzFz5kx07doVa9euRdOmTfHqq6/i119/NdpWbGwsjh49irfffhuLFi1CWloaRo0ahYKC/51EdfnyZYwcORLVqlXD6tWr8eKLL2LZsmVYt26do3aZiIiIiFyYS81ZXrVqFby9vaXHrVq1woMHD7B+/Xq88sorkMlkWLZsGbp164bY2FgAQMuWLXHhwgWsXLkSa9euBQAkJyfjyJEjiI+PR2RkJADA398fMTEx2LNnD2JiYgAA8fHxqFKlCj788EMoFAq0atUK9+7dw8cff4yhQ4dCoeA1vYiIiIjKM5caWX40KBs0bNgQ2dnZ0Gg0uHr1KtLT09G1a1ejMjExMUhKSkJeXh4A4PDhw1Cr1YiIiJDKBAQEoGHDhjh8+LC07PDhw2jfvr1RKI6JiUFmZiaSk5NLeveIiIiIqJRxqbBszi+//IIaNWqgYsWKSE1NBVA4SvyoevXqIT8/H1evXgUApKamwt/fH4IgGJULCAiQtqHRaPDnn38iICDApIwgCFI5IiJzBEGASqUyeZ8hIqKyxaWmYTzuP//5DxITEzFt2jQAQEZGBgBArVYblTM8NjyfmZmJSpUqmWzPy8sLv//+O4DCEwDNbUuhUEClUknbsoUoitBo7H993uLIyckx+kmFHu0PnV4PUa+ze52yv08odeX69Hq90U9b69Tr9NDp7H8CrbsAiKJg1yCrUqkQHBwsPdaLInK12nJ/gjDfW0yxT8xjv5jHfjFljz4x3FPBGi4blm/evIlJkyYhPDwcw4YNc3ZziiQ/Px/nzp1zdjOskp6e7uwmuByVSgUA0Gq10DngQ4+iYi6UAPLycpHv4vVptdpi1ZmblwuNxv53Kqzi4Q5BkCM5JQdZDqivosoNzep7Ii0tjX/g/sb3FlPsE/PYL+axX0yVdJ9Ye26aS4blzMxMjBo1CpUrV8by5cshkxXOFvHy8gJQOCpcrVo1o/KPPq9Wq3Hz5k2T7WZkZEhlDCPPhhFmg7y8POTk5EjlbCGXy1G/fn2b13eEnJwcpKenw8/PTwqHVNgvt27dAgB4eHhA1HvavU6ZUgkAUCiUkHu6Zn16vR5arRYeHh7S69GWOpUKJTw97X/irKKwOuTr5ci309vco33iIRb2ib+/P0eW+d5ign1iHvvFPPaLKXv0yaVLl6wu63JhWavVYsyYMcjKysKmTZuMplMY5henpqYazTVOTU2FXC6Hr6+vVC4pKclkiD0tLQ2BgYEAAE9PT9SqVctkbnJaWhpEUTSZy1wUgiDA0wGhpySoVKpS01ZHc5PJIMrc7F6P4RgtDfXJZDK42dBGQ50yNxnc7L+LMOR5R9Qnk8kg+7sS/mH7H763mGKfmMd+MY/9Yqok+6Qo0/Rc6gS/goICxMbGIjU1FZ988glq1Khh9Lyvry/8/Pywa9cuo+WJiYlo1aqVNJweFRWFjIwMJCUlSWXS0tJw9uxZREVFScuioqKwf/9+5OfnG21LrVYjLCzMHrtIRERERKWIS40sz5kzBwcPHkRcXByys7ONbjQSHBwMhUKBCRMmYOrUqahTpw7Cw8ORmJiIM2fO4IsvvpDKhoWFITIyEtOnT8e0adOgVCqxePFiBAUFoVOnTlK5kSNHIiEhAVOmTMGgQYNw4cIFxMfHY9KkSbzGMhERERG5Vlg+evQoAGDBggUmz+3fvx8+Pj7o3r07cnJysHbtWqxZswb+/v5YsWKFyUjwkiVLMH/+fMyaNQsFBQWIjIzEjBkz4O7+v12uW7cu4uPjsWDBAowePRre3t6YOHEiRowYYd8dJSIiIqJSwaXC8oEDB6wq169fP/Tr1++JZSpVqoR58+Zh3rx5TyzXrFkzbN682eo2EhEREVH54VJzlomIiIiIXAnDMhERERGRBQzLREREREQWMCwTEREREVnAsExEREREZAHDMhERERGRBS516TgiKts8HXSvHw+5Y+ohIqKyj2GZiOxPkEEURQT78MssIiIqXRiWicj+RD0EQUDB1fMQczV2r06oWAXuNf3sXg8REZV9DMtE5DBixh2ImkwH1ebnoHqIiKgss/k70WHDhiEpKcni88eOHcOwYcNs3TwRERERkdPZHJZPnDiBv/76y+Lz9+7dw8mTJ23dPBERERGR0xXrbBtBECw+d/nyZVSoUKE4myciIiIicqoizVnetm0btm3bJj1etWoVNm/ebFIuKysL58+fR1RUVPFbSERERETkJEUKyzk5Obh//770+OHDh5DJTAenPT09MXDgQIwfP774LSQiIiIicpIiheXBgwdj8ODBAIDo6Gi89dZbaN++vV0aRkRERETkbDZfOu7AgQMl2Q4iIiIiIpdT7OssZ2dn48aNG8jMzIQoiibPN2/evLhVEBERERE5hc1h+d69e5g7dy727NkDnU5n8rwoihAEAefOnStWA4mIiIiInMXmsDxr1iwcPHgQQ4cOxTPPPAO1Wl2S7SIiIiIicjqbw/LRo0fx4osv4o033ijJ9hARERERuQybb0ri4eGB2rVrl2RbiIiIiIhcis1huWfPnti3b19JtoWIiIiIyKXYPA2jc+fOOHnyJEaOHIkBAwagZs2acHNzMynXqFGjYjWQiIiIiMhZbA7LhpuTAMDPP/9s8jyvhkFE5YXC7X/veY7i6PqIiMorm8Py/PnzS7IdRESllrsbIAgCzl7TQ5Nn//o8FUCwj82z6IiIqAhsDst9+vQpyXYQEZV6mjwgW+vsVhARUUni0AQRERERkQU2jyy/+eab/1hGEATMmzfP1iqIiIiIiJzK5rB8/Phxk2V6vR537tyBTqeDt7c3VCpVsRpHRERERORMNoflAwcOmF2en5+PTZs24bPPPsO6detsbhgRERERkbPZHJYtkcvlGDJkCC5duoR3330Xa9asKekqiIis4qmw37b1OgEK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1KhR8jtDROQgDMtEROXEsWPHcOfOHezcuRM7d+40eT4hIQGRkZFWb0+v1wMARowYgTZt2pgt83jAJiIqbRiWiYjKiYSEBFStWhWzZs0yeW7v3r3Yu3cv5syZg6eeegrHjx9HTk6O0ejylStXjNbx9fUFAMjlcrRu3dq+jScichLOWSYiKge0Wi327NmDtm3bokuXLib/XnjhBTx8+BAHDhxAZGQk8vPzsXnzZml9vV6PjRs3Gm2zatWqaNGiBTZt2oTbt2+b1Hnv3j277xcRkb1xZJmIqBw4cOAAHj58iOjoaLPPN23aFN7e3tixYwdWrlyJ0NBQvP/++7hy5QoCAgJw4MABZGRkACg8KdBg9uzZGDx4MHr06IH+/fvD19cXf/31F3799VfcvHkTO3bscMj+ERHZC8MyEVE5sGPHDiiVSkRERJh9XiaToW3btkhISEBmZiZWr16N9957D9u2bYNMJkPHjh0xfvx4DBo0CEqlUlqvfv362LJlC1asWIFt27bhwYMH8Pb2RnBwMMaPH++o3SMishtBFEXR2Y0gIiLXt2/fPowfPx5ffvklnn76aWc3h4jIIThnmYiITGi1WqPHOp0OGzZsQMWKFdGoUSMntYqIyPE4DYOIiEy8++670Gq1CAsLQ15eHvbs2YPk5GRMnjwZHh4ezm4eEZHDcBoGERGZSEhIwPr163H58mXk5uaibt26GDRoEIYMGeLsphERORTDMhERERGRBZyzTERERERkAcMyEREREZEFDMtERERERBYwLBMRERERWcCwTERERERkAcMyEREREZEFDMtERERERBYwLBMRERERWcCwTERERERkwf8DFzBTU5iiL3gAAAAASUVORK5CYII=\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["<ipython-input-26-1f9432b25ab5>:40: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.boxplot(data=df_clean, x='Recommended IND', y='Rating', palette='Set3')\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/categorical.py:640: FutureWarning: SeriesGroupBy.grouper is deprecated and will be removed in a future version of pandas.\n","  positions = grouped.grouper.result_index.to_numpy(dtype=float)\n","/usr/local/lib/python3.10/dist-packages/seaborn/_base.py:949: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  data_subset = grouped_data.get_group(pd_key)\n","/usr/local/lib/python3.10/dist-packages/seaborn/categorical.py:640: FutureWarning: SeriesGroupBy.grouper is deprecated and will be removed in a future version of pandas.\n","  positions = grouped.grouper.result_index.to_numpy(dtype=float)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"NX4rWWGVWeW-"},"execution_count":null,"outputs":[]}]}